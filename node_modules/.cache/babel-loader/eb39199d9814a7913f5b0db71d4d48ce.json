{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harshitha\\\\Downloads\\\\AuthInMern-Authentication-In-MERN\\\\AuthInMern-Authentication-In-MERN\\\\client\\\\src\\\\components\\\\Main\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Oval } from 'react-loader-spinner';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFrown } from '@fortawesome/free-solid-svg-icons';\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [weather, setWeather] = useState({\n    loading: false,\n    data: {},\n    error: false\n  });\n\n  const toDateFunction = () => {\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    const WeekDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const currentDate = new Date();\n    const date = `${WeekDays[currentDate.getDay()]} ${currentDate.getDate()} ${months[currentDate.getMonth()]}`;\n    return date;\n  };\n\n  const search = async event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      setInput('');\n      setWeather({ ...weather,\n        loading: true\n      });\n      const url = 'https://api.openweathermap.org/data/2.5/weather';\n      const api_key = 'f00c38e0279b7bc85480c3fe775d518c';\n      await axios.get(url, {\n        params: {\n          q: input,\n          units: 'metric',\n          appid: api_key\n        }\n      }).then(res => {\n        console.log('res', res);\n        setWeather({\n          data: res.data,\n          loading: false,\n          error: false\n        });\n      }).catch(error => {\n        setWeather({ ...weather,\n          data: {},\n          error: true\n        });\n        setInput('');\n        console.log('error', error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"styles.App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"styles.app-name\",\n      children: \"GeeksforGeeks Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"styles.city-search\",\n        placeholder: \"Enter City Name..\",\n        name: \"query\",\n        value: input,\n        onChange: event => setInput(event.target.value),\n        onKeyPress: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), weather.loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Oval, {\n        type: \"Oval\",\n        color: \"black\",\n        height: 100,\n        width: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), weather.error && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"styles.error-message\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faFrown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '20px'\n          },\n          children: \"City not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), weather && weather.data && weather.data.main && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"city-name\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [weather.data.name, \", \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: weather.data.sys.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: toDateFunction()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-temp\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"\",\n          src: `https://openweathermap.org/img/wn/${weather.data.weather[0].icon}@2x.png`,\n          alt: weather.data.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), Math.round(weather.data.main.temp), /*#__PURE__*/_jsxDEV(\"sup\", {\n          className: \"deg\",\n          children: \"\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"des-wind\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: weather.data.weather[0].description.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wind Speed: \", weather.data.wind.speed, \"m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"di1+sNFzjRMfveDYPa8DHM9Z7uc=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/Harshitha/Downloads/AuthInMern-Authentication-In-MERN/AuthInMern-Authentication-In-MERN/client/src/components/Main/index.jsx"],"names":["Oval","React","useState","axios","FontAwesomeIcon","faFrown","styles","Main","input","setInput","weather","setWeather","loading","data","error","toDateFunction","months","WeekDays","currentDate","Date","date","getDay","getDate","getMonth","search","event","key","preventDefault","url","api_key","get","params","q","units","appid","then","res","console","log","catch","target","value","fontSize","main","name","sys","country","icon","description","Math","round","temp","toUpperCase","wind","speed"],"mappings":";;;AACA,SAASA,IAAT,QAAqB,sBAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;;AAGA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC;AACnCU,IAAAA,OAAO,EAAE,KAD0B;AAEnCC,IAAAA,IAAI,EAAE,EAF6B;AAGnCC,IAAAA,KAAK,EAAE;AAH4B,GAAD,CAAtC;;AAMA,QAAMC,cAAc,GAAG,MAAM;AACzB,UAAMC,MAAM,GAAG,CACX,SADW,EAEX,UAFW,EAGX,OAHW,EAIX,OAJW,EAKX,KALW,EAMX,MANW,EAOX,MAPW,EAQX,QARW,EASX,WATW,EAUX,SAVW,EAWX,UAXW,EAYX,UAZW,CAAf;AAcA,UAAMC,QAAQ,GAAG,CACb,QADa,EAEb,QAFa,EAGb,SAHa,EAIb,WAJa,EAKb,UALa,EAMb,QANa,EAOb,UAPa,CAAjB;AASA,UAAMC,WAAW,GAAG,IAAIC,IAAJ,EAApB;AACA,UAAMC,IAAI,GAAI,GAAEH,QAAQ,CAACC,WAAW,CAACG,MAAZ,EAAD,CAAuB,IAAGH,WAAW,CAACI,OAAZ,EAAsB,IAAGN,MAAM,CAACE,WAAW,CAACK,QAAZ,EAAD,CAC5E,EADL;AAEA,WAAOH,IAAP;AACH,GA5BD;;AA8BA,QAAMI,MAAM,GAAG,MAAOC,KAAP,IAAiB;AAC5B,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACvBD,MAAAA,KAAK,CAACE,cAAN;AACAlB,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcE,QAAAA,OAAO,EAAE;AAAvB,OAAD,CAAV;AACA,YAAMgB,GAAG,GAAG,iDAAZ;AACA,YAAMC,OAAO,GAAG,kCAAhB;AACA,YAAM1B,KAAK,CACN2B,GADC,CACGF,GADH,EACQ;AACNG,QAAAA,MAAM,EAAE;AACJC,UAAAA,CAAC,EAAExB,KADC;AAEJyB,UAAAA,KAAK,EAAE,QAFH;AAGJC,UAAAA,KAAK,EAAEL;AAHH;AADF,OADR,EAQDM,IARC,CAQKC,GAAD,IAAS;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;AACAzB,QAAAA,UAAU,CAAC;AAAEE,UAAAA,IAAI,EAAEuB,GAAG,CAACvB,IAAZ;AAAkBD,UAAAA,OAAO,EAAE,KAA3B;AAAkCE,UAAAA,KAAK,EAAE;AAAzC,SAAD,CAAV;AACH,OAXC,EAYDyB,KAZC,CAYMzB,KAAD,IAAW;AACdH,QAAAA,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcG,UAAAA,IAAI,EAAE,EAApB;AAAwBC,UAAAA,KAAK,EAAE;AAA/B,SAAD,CAAV;AACAL,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACA4B,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBxB,KAArB;AACH,OAhBC,CAAN;AAiBH;AACJ,GAzBD;;AA2BA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,oBAFd;AAGI,QAAA,WAAW,EAAC,mBAHhB;AAII,QAAA,IAAI,EAAC,OAJT;AAKI,QAAA,KAAK,EAAEN,KALX;AAMI,QAAA,QAAQ,EAAGiB,KAAD,IAAWhB,QAAQ,CAACgB,KAAK,CAACe,MAAN,CAAaC,KAAd,CANjC;AAOI,QAAA,UAAU,EAAEjB;AAPhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,EAeKd,OAAO,CAACE,OAAR,iBACG;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAC,OAAxB;AAAgC,QAAA,MAAM,EAAE,GAAxC;AAA6C,QAAA,KAAK,EAAE;AAApD;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,oBAhBR,EAsBKF,OAAO,CAACI,KAAR,iBACG;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAM,QAAA,SAAS,EAAC,sBAAhB;AAAA,gCACI,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAET;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,KAAK,EAAE;AAAEqC,YAAAA,QAAQ,EAAE;AAAZ,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,oBAvBR,EAgCKhC,OAAO,IAAIA,OAAO,CAACG,IAAnB,IAA2BH,OAAO,CAACG,IAAR,CAAa8B,IAAxC,iBACG;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAA,qBACKjC,OAAO,CAACG,IAAR,CAAa+B,IADlB,qBACyB;AAAA,sBAAOlC,OAAO,CAACG,IAAR,CAAagC,GAAb,CAAiBC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI;AAAA,oBAAO/B,cAAc;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ,eASI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AACI,UAAA,SAAS,EAAC,EADd;AAEI,UAAA,GAAG,EAAG,qCAAoCL,OAAO,CAACG,IAAR,CAAaH,OAAb,CAAqB,CAArB,EAAwBqC,IAAK,SAF3E;AAGI,UAAA,GAAG,EAAErC,OAAO,CAACG,IAAR,CAAaH,OAAb,CAAqB,CAArB,EAAwBsC;AAHjC;AAAA;AAAA;AAAA;AAAA,gBADJ,EAMKC,IAAI,CAACC,KAAL,CAAWxC,OAAO,CAACG,IAAR,CAAa8B,IAAb,CAAkBQ,IAA7B,CANL,eAOI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAkBI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAA,oBAAIzC,OAAO,CAACG,IAAR,CAAaH,OAAb,CAAqB,CAArB,EAAwBsC,WAAxB,CAAoCI,WAApC;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,qCAAgB1C,OAAO,CAACG,IAAR,CAAawC,IAAb,CAAkBC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAjCR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4DH;;GA7HQ/C,I;;KAAAA,I;AA+HT,eAAeA,IAAf","sourcesContent":["\nimport { Oval } from 'react-loader-spinner'; \nimport React, { useState } from 'react'; \nimport axios from 'axios'; \nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; \nimport { faFrown } from '@fortawesome/free-solid-svg-icons'; \nimport styles from \"./styles.module.css\";\n\n\nfunction Main() { \n    const [input, setInput] = useState(''); \n    const [weather, setWeather] = useState({ \n        loading: false, \n        data: {}, \n        error: false, \n    }); \n  \n    const toDateFunction = () => { \n        const months = [ \n            'January', \n            'February', \n            'March', \n            'April', \n            'May', \n            'June', \n            'July', \n            'August', \n            'September', \n            'October', \n            'November', \n            'December', \n        ]; \n        const WeekDays = [ \n            'Sunday', \n            'Monday', \n            'Tuesday', \n            'Wednesday', \n            'Thursday', \n            'Friday', \n            'Saturday', \n        ]; \n        const currentDate = new Date(); \n        const date = `${WeekDays[currentDate.getDay()]} ${currentDate.getDate()} ${months[currentDate.getMonth()] \n            }`; \n        return date; \n    }; \n  \n    const search = async (event) => { \n        if (event.key === 'Enter') { \n            event.preventDefault(); \n            setInput(''); \n            setWeather({ ...weather, loading: true }); \n            const url = 'https://api.openweathermap.org/data/2.5/weather'; \n            const api_key = 'f00c38e0279b7bc85480c3fe775d518c'; \n            await axios \n                .get(url, { \n                    params: { \n                        q: input, \n                        units: 'metric', \n                        appid: api_key, \n                    }, \n                }) \n                .then((res) => { \n                    console.log('res', res); \n                    setWeather({ data: res.data, loading: false, error: false }); \n                }) \n                .catch((error) => { \n                    setWeather({ ...weather, data: {}, error: true }); \n                    setInput(''); \n                    console.log('error', error); \n                }); \n        } \n    }; \n  \n    return ( \n        <div className=\"styles.App\"> \n            <h1 className=\"styles.app-name\"> \n                GeeksforGeeks Weather App \n            </h1> \n            <div className=\"search-bar\"> \n                <input \n                    type=\"text\"\n                    className=\"styles.city-search\"\n                    placeholder=\"Enter City Name..\"\n                    name=\"query\"\n                    value={input} \n                    onChange={(event) => setInput(event.target.value)} \n                    onKeyPress={search} \n                /> \n            </div> \n            {weather.loading && ( \n                <> \n                    <br /> \n                    <br /> \n                    <Oval type=\"Oval\" color=\"black\" height={100} width={100} /> \n                </> \n            )} \n            {weather.error && ( \n                <> \n                    <br /> \n                    <br /> \n                    <span className=\"styles.error-message\"> \n                        <FontAwesomeIcon icon={faFrown} /> \n                        <span style={{ fontSize: '20px' }}>City not found</span> \n                    </span> \n                </> \n            )} \n            {weather && weather.data && weather.data.main && ( \n                <div> \n                    <div className=\"city-name\"> \n                        <h2> \n                            {weather.data.name}, <span>{weather.data.sys.country}</span> \n                        </h2> \n                    </div> \n                    <div className=\"date\"> \n                        <span>{toDateFunction()}</span> \n                    </div> \n                    <div className=\"icon-temp\"> \n                        <img \n                            className=\"\"\n                            src={`https://openweathermap.org/img/wn/${weather.data.weather[0].icon}@2x.png`} \n                            alt={weather.data.weather[0].description} \n                        /> \n                        {Math.round(weather.data.main.temp)} \n                        <sup className=\"deg\">°C</sup> \n                    </div> \n                    <div className=\"des-wind\"> \n                        <p>{weather.data.weather[0].description.toUpperCase()}</p> \n                        <p>Wind Speed: {weather.data.wind.speed}m/s</p> \n                    </div> \n                </div> \n            )} \n        </div> \n    ); \n} \n  \nexport default Main;"]},"metadata":{},"sourceType":"module"}