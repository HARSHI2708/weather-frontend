{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harshitha\\\\Downloads\\\\AuthInMern-Authentication-In-MERN\\\\AuthInMern-Authentication-In-MERN\\\\client\\\\src\\\\components\\\\Login\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TextField, Button, Typography, Grid, Paper } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\"\n  }\n}));\n\nconst Login = () => {\n  _s();\n\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const classes = useStyles();\n\n  const handleChange = _ref => {\n    let {\n      currentTarget: input\n    } = _ref;\n    setData({ ...data,\n      [input.name]: input.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // Simulate a simple frontend login logic (replace with your own logic)\n\n    if (data.email && data.password) {\n      localStorage.setItem(\"token\", \"your_mock_token\");\n      window.location = \"/\"; // Redirect to the home page after \"login\"\n    } else {\n      setError(\"Invalid email or password\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.login_container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.login_form_container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.left,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: styles.form_container,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Login to Your Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"email\",\n            label: \"Email\",\n            name: \"email\",\n            variant: \"outlined\",\n            fullWidth: true,\n            onChange: handleChange,\n            value: data.email,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"password\",\n            label: \"Password\",\n            name: \"password\",\n            variant: \"outlined\",\n            fullWidth: true,\n            onChange: handleChange,\n            value: data.password,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.error_msg,\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            className: styles.green_btn,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.right,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"New Here ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            className: styles.white_btn,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"6J+lRdYE7ZAlWibOfh/xJUj4PdY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Harshitha/Downloads/AuthInMern-Authentication-In-MERN/AuthInMern-Authentication-In-MERN/client/src/components/Login/index.jsx"],"names":["React","useState","Link","TextField","Button","Typography","Grid","Paper","makeStyles","styles","useStyles","theme","paper","padding","spacing","textAlign","Login","data","setData","email","password","error","setError","classes","handleChange","currentTarget","input","name","value","handleSubmit","e","preventDefault","localStorage","setItem","window","location","login_container","login_form_container","left","form_container","error_msg","green_btn","right","white_btn"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TextField, Button, Typography, Grid, Paper } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport styles from \"./styles.module.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nconst Login = () => {\n  const [data, setData] = useState({ email: \"\", password: \"\" });\n  const [error, setError] = useState(\"\");\n\n  const classes = useStyles();\n\n  const handleChange = ({ currentTarget: input }) => {\n    setData({ ...data, [input.name]: input.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Simulate a simple frontend login logic (replace with your own logic)\n    if (data.email && data.password) {\n      localStorage.setItem(\"token\", \"your_mock_token\");\n      window.location = \"/\"; // Redirect to the home page after \"login\"\n    } else {\n      setError(\"Invalid email or password\");\n    }\n  };\n\n  return (\n    <div className={styles.login_container}>\n      <div className={styles.login_form_container}>\n        <div className={styles.left}>\n          <form className={styles.form_container} onSubmit={handleSubmit}>\n            <h1>Login to Your Account</h1>\n            <TextField\n              type=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={handleChange}\n              value={data.email}\n              required\n            />\n            <TextField\n              type=\"password\"\n              label=\"Password\"\n              name=\"password\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={handleChange}\n              value={data.password}\n              required\n            />\n            {error && <div className={styles.error_msg}>{error}</div>}\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={styles.green_btn}\n            >\n              Sign In\n            </Button>\n          </form>\n        </div>\n        <div className={styles.right}>\n          <Typography variant=\"h4\">New Here ?</Typography>\n          <Link to=\"/signup\">\n            <Button variant=\"contained\" color=\"secondary\" className={styles.white_btn}>\n              Sign Up\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}